<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Q13.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP" type="required" numBits="3" relativity="absolute" signed="true" defaultValue="0" id="model.Field2f2058a7">
	</Field>
	<Field name="UNUSED" type="ignored" numBits="13" relativity="absolute" signed="true" defaultValue="0" id="model.Field72828b92">
	</Field>
	<Field name="ADDRESS" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field2031457">
	</Field>
	<Field name="I" type="required" numBits="1" relativity="absolute" signed="true" defaultValue="0" id="model.Field7d5c640b">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register5094ee67" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register362c21fc" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register2c972ac2" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register32756f67" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register45654898" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register1211a209" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register7455bb3" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register1e52126b" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-BIT" bit="0" register="model.module.Register32756f67" halt="false" id="model.module.ConditionBit711ca8b1" />
	<ConditionBit name="HALT" bit="0" register="model.module.Register1e52126b" halt="true" id="model.module.ConditionBit6e825d71" />

	<!--............. rams ..........................-->
	<RAM name="MAIN" length="4096" cellSize="16" id="model.module.RAM43b70bd1" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<!-- none -->

	<!--............. increment .....................-->
	<Increment name="INCR-PC" register="model.module.Register7455bb3" delta="1" id="model.microinstruction.Increment4d789886" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register5094ee67" source2="model.module.Register2c972ac2" destination="model.module.Register5094ee67" id="model.microinstruction.Arithmetic5935f8b8" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register1211a209" srcStartBit="0" dest="model.module.Register362c21fc" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR25205f3a" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register7455bb3" srcStartBit="0" dest="model.module.Register362c21fc" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR5eb221cc" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="model.module.Register1211a209" id="model.microinstruction.Decode57072e34" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HLT-BIT" bit="model.module.ConditionBit6e825d71" value="1" id="model.microinstruction.SetCondBit2181fc54" />

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register5094ee67" connection="[Console]" id="model.microinstruction.IO6ffbed1" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register5094ee67" connection="[Console]" id="model.microinstruction.IO490c4383" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-MAIN[AR]" direction="read" memory="model.module.RAM43b70bd1" data="model.module.Register2c972ac2" address="model.module.Register362c21fc" id="model.microinstruction.MemoryAccess2794b218" />
	<MemoryAccess name="IR&lt;-MAIN[AR]" direction="read" memory="model.module.RAM43b70bd1" data="model.module.Register1211a209" address="model.module.Register362c21fc" id="model.microinstruction.MemoryAccess95999e2" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End72aba72e" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR5eb221cc" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess95999e2" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR25205f3a" />
		<Microinstruction microRef="model.microinstruction.Increment4d789886" />
		<Microinstruction microRef="model.microinstruction.Decode57072e34" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ADD" opcode="3" instructionFormat="OP I ADDRESS" assemblyFormat="OP I ADDRESS" instructionColors="#b3f182 #e7808b #f9b6f5" assemblyColors="#b3f182 #e7808b #f9b6f5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2794b218" />
		<Microinstruction microRef="model.microinstruction.Arithmetic5935f8b8" />
		<Microinstruction microRef="model.microinstruction.End72aba72e" />
	</MachineInstruction>

	<MachineInstruction name="STOP" opcode="2" instructionFormat="OP UNUSED" assemblyFormat="OP" instructionColors="#98afef #c4e8bd" assemblyColors="#98afef" >
		<Microinstruction microRef="model.microinstruction.SetCondBit2181fc54" />
		<Microinstruction microRef="model.microinstruction.End72aba72e" />
	</MachineInstruction>

	<MachineInstruction name="WRITE" opcode="1" instructionFormat="OP UNUSED" assemblyFormat="OP" instructionColors="#89ebe4 #83dbb0" assemblyColors="#89ebe4" >
		<Microinstruction microRef="model.microinstruction.IO490c4383" />
		<Microinstruction microRef="model.microinstruction.End72aba72e" />
	</MachineInstruction>

	<MachineInstruction name="READ" opcode="0" instructionFormat="OP UNUSED" assemblyFormat="OP" instructionColors="#c599cc #c5d5f1" assemblyColors="#c599cc" >
		<Microinstruction microRef="model.microinstruction.IO6ffbed1" />
		<Microinstruction microRef="model.microinstruction.End72aba72e" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM43b70bd1" startingAddress="22" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
