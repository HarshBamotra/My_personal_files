<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Q1.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP_R" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field68312095">
	</Field>
	<Field name="UNUSED" type="ignored" numBits="8" relativity="absolute" signed="true" defaultValue="0" id="model.Field7d1a33f1">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field6983b7ee">
	</Field>
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field1bace10">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register48f3667e" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register25809200" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register5827a96" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register614fc049" />
	<Register name="FGI" width="1" initialValue="0" readOnly="false" id="model.module.Register325c8a88" />
	<Register name="FGO" width="1" initialValue="0" readOnly="false" id="model.module.Register13ed0e51" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register5ad8070" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register1a7f5504" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register4ca19409" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register5e823cc2" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-BIT" bit="0" register="model.module.Register614fc049" halt="false" id="model.module.ConditionBit3eb58563" />
	<ConditionBit name="HALT" bit="0" register="model.module.Register5e823cc2" halt="true" id="model.module.ConditionBit7e745f60" />

	<!--............. rams ..........................-->
	<RAM name="MAIN" length="4096" cellSize="16" id="model.module.RAM6508e320" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register48f3667e" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet647c76ef" />
	<Set name="E&lt;-0" register="model.module.Register614fc049" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet46cf98a3" />
	<Set name="FGI&lt;-0" register="model.module.Register325c8a88" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet71e047da" />
	<Set name="FGO&lt;-0" register="model.module.Register13ed0e51" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet3404f1ba" />

	<!--............. test ..........................-->
	<Test name="AC(0)!=0" register="model.module.Register48f3667e" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test33c822db" />
	<Test name="AC(0)!=1" register="model.module.Register48f3667e" start="0" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test9f8be81" />
	<Test name="DR(0)!=0" register="model.module.Register5827a96" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test7a55e6f3" />
	<Test name="E(0)!=0" register="model.module.Register614fc049" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test694f5122" />

	<!--............. increment .....................-->
	<Increment name="INCR-AC" register="model.module.Register48f3667e" delta="1" id="model.microinstruction.Increment1b63782a" />
	<Increment name="INCR-AR" register="model.module.Register25809200" delta="1" id="model.microinstruction.Increment5723d171" />
	<Increment name="INCR-DR" register="model.module.Register5827a96" delta="1" id="model.microinstruction.Increment214d718" />
	<Increment name="INCR-PC" register="model.module.Register4ca19409" delta="1" id="model.microinstruction.Increment11c14039" />

	<!--............. shift .........................-->
	<Shift name="SHL-AC" type="cyclic" source="model.module.Register48f3667e" destination="model.module.Register48f3667e" direction="left" distance="1" id="model.microinstruction.Shift7c0a8b08" />
	<Shift name="SHR-AC" type="cyclic" source="model.module.Register48f3667e" destination="model.module.Register48f3667e" direction="right" distance="1" id="model.microinstruction.Shift6751dc38" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register48f3667e" source2="model.module.Register48f3667e" destination="model.module.Register48f3667e" id="model.microinstruction.Logical994fa74" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register48f3667e" source2="model.module.Register5827a96" destination="model.module.Register48f3667e" id="model.microinstruction.Logical60cd5762" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register614fc049" source2="model.module.Register614fc049" destination="model.module.Register614fc049" id="model.microinstruction.Logical61a915d1" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC*DR" type="MULTIPLY" source1="model.module.Register48f3667e" source2="model.module.Register5827a96" destination="model.module.Register48f3667e" carryBit="model.module.ConditionBit3eb58563" id="model.microinstruction.Arithmetic33a96cd9" />
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register48f3667e" source2="model.module.Register5827a96" destination="model.module.Register48f3667e" carryBit="model.module.ConditionBit3eb58563" id="model.microinstruction.Arithmetic1d406782" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register614fc049" srcStartBit="0" dest="model.module.Register48f3667e" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR17bc550f" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register5827a96" srcStartBit="0" dest="model.module.Register48f3667e" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR3e92ddb4" />
	<TransferRtoR name="AR&lt;-DR" source="model.module.Register5827a96" srcStartBit="4" dest="model.module.Register25809200" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR46a5a11b" />
	<TransferRtoR name="AR&lt;-IR(4-15)" source="model.module.Register1a7f5504" srcStartBit="4" dest="model.module.Register25809200" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR58c7a23a" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register4ca19409" srcStartBit="0" dest="model.module.Register25809200" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR2da69000" />
	<TransferRtoR name="DR&lt;-PC" source="model.module.Register4ca19409" srcStartBit="0" dest="model.module.Register5827a96" destStartBit="4" numBits="12" id="model.microinstruction.TransferRtoR5f1977d" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register48f3667e" srcStartBit="15" dest="model.module.Register614fc049" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR6e3743a1" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register25809200" srcStartBit="0" dest="model.module.Register4ca19409" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoRb84ea2f" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="model.module.Register1a7f5504" id="model.microinstruction.Decode12bb5dcf" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HLT-BIT" bit="model.module.ConditionBit7e745f60" value="1" id="model.microinstruction.SetCondBit1b786a9a" />

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register48f3667e" connection="[Console]" id="model.microinstruction.IO4f86181f" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register48f3667e" connection="[Console]" id="model.microinstruction.IO637f5652" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-MAIN[AR]" direction="read" memory="model.module.RAM6508e320" data="model.module.Register5827a96" address="model.module.Register25809200" id="model.microinstruction.MemoryAccess2be22ad7" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM6508e320" data="model.module.Register5827a96" address="model.module.Register25809200" id="model.microinstruction.MemoryAccess7396a98b" />
	<MemoryAccess name="IR&lt;-MAIN[AR]" direction="read" memory="model.module.RAM6508e320" data="model.module.Register1a7f5504" address="model.module.Register25809200" id="model.microinstruction.MemoryAccesscaf1106" />
	<MemoryAccess name="MAIN[AR]&lt;-AC" direction="write" memory="model.module.RAM6508e320" data="model.module.Register48f3667e" address="model.module.Register25809200" id="model.microinstruction.MemoryAccess15fb0b07" />
	<MemoryAccess name="MAIN[AR]&lt;-DR" direction="write" memory="model.module.RAM6508e320" data="model.module.Register5827a96" address="model.module.Register25809200" id="model.microinstruction.MemoryAccess2ff52ffd" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End69691179" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR2da69000" />
		<Microinstruction microRef="model.microinstruction.MemoryAccesscaf1106" />
		<Microinstruction microRef="model.microinstruction.Increment11c14039" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR58c7a23a" />
		<Microinstruction microRef="model.microinstruction.Decode12bb5dcf" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="SZE" opcode="e0" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#aba984 #96e2d4" assemblyColors="#aba984" >
		<Microinstruction microRef="model.microinstruction.Test694f5122" />
		<Microinstruction microRef="model.microinstruction.Increment11c14039" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e1" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#aa96f6 #f98fc8" assemblyColors="#aa96f6" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR6e3743a1" />
		<Microinstruction microRef="model.microinstruction.Shift7c0a8b08" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR17bc550f" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="MULTIPLY" opcode="7" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#8dd7cb #968ac4" assemblyColors="#8dd7cb #968ac4" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR58c7a23a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2be22ad7" />
		<Microinstruction microRef="model.microinstruction.Arithmetic33a96cd9" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f4" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#b0e1e2 #fda781" assemblyColors="#b0e1e2" >
		<Microinstruction microRef="model.microinstruction.IO637f5652" />
		<Microinstruction microRef="model.microinstruction.CpusimSet3404f1ba" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f8" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#a3b8f4 #adfdfa" assemblyColors="#a3b8f4" >
		<Microinstruction microRef="model.microinstruction.IO4f86181f" />
		<Microinstruction microRef="model.microinstruction.CpusimSet71e047da" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="1" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#e3b18a #f7eef9" assemblyColors="#e3b18a #f7eef9" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2be22ad7" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR46a5a11b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2be22ad7" />
		<Microinstruction microRef="model.microinstruction.Logical60cd5762" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="c" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#eddea4 #e79085" assemblyColors="#eddea4 #e79085" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2be22ad7" />
		<Microinstruction microRef="model.microinstruction.Increment214d718" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2ff52ffd" />
		<Microinstruction microRef="model.microinstruction.Test7a55e6f3" />
		<Microinstruction microRef="model.microinstruction.Increment11c14039" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="a" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#cccab0 #babe8a" assemblyColors="#cccab0 #babe8a" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f1977d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2ff52ffd" />
		<Microinstruction microRef="model.microinstruction.Increment5723d171" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRb84ea2f" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="8" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f5c5a0 #b389c4" assemblyColors="#f5c5a0 #b389c4" >
		<Microinstruction microRef="model.microinstruction.TransferRtoRb84ea2f" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="6" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f3fe90 #afdb9e" assemblyColors="#f3fe90 #afdb9e" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fb0b07" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="4" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#dd9089 #fefca2" assemblyColors="#dd9089 #fefca2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2be22ad7" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3e92ddb4" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f881f8 #b696df" assemblyColors="#f881f8 #b696df" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR58c7a23a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7396a98b" />
		<Microinstruction microRef="model.microinstruction.Logical60cd5762" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="2" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a8c08f #afe0bd" assemblyColors="#a8c08f #afe0bd" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR58c7a23a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7396a98b" />
		<Microinstruction microRef="model.microinstruction.Arithmetic1d406782" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e2" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#a3a7b1 #a2c483" assemblyColors="#a3a7b1" >
		<Microinstruction microRef="model.microinstruction.Test33c822db" />
		<Microinstruction microRef="model.microinstruction.Increment11c14039" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e3" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#94c0c6 #a492ac" assemblyColors="#94c0c6" >
		<Microinstruction microRef="model.microinstruction.Test9f8be81" />
		<Microinstruction microRef="model.microinstruction.Increment11c14039" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e4" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#edecce #a4e6c9" assemblyColors="#edecce" >
		<Microinstruction microRef="model.microinstruction.Test33c822db" />
		<Microinstruction microRef="model.microinstruction.Increment11c14039" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e5" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#90f7f3 #8b88ed" assemblyColors="#90f7f3" >
		<Microinstruction microRef="model.microinstruction.Increment1b63782a" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e6" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#bbfec2 #a4d6b4" assemblyColors="#bbfec2" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR6e3743a1" />
		<Microinstruction microRef="model.microinstruction.Shift6751dc38" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR17bc550f" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e7" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#989ce1 #f0f1a8" assemblyColors="#989ce1" >
		<Microinstruction microRef="model.microinstruction.Logical61a915d1" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e8" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#cec387 #cf84f8" assemblyColors="#cec387" >
		<Microinstruction microRef="model.microinstruction.Logical994fa74" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e9" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#9dd1bb #d2d0de" assemblyColors="#9dd1bb" >
		<Microinstruction microRef="model.microinstruction.CpusimSet46cf98a3" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="f1" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#a884a1 #e78897" assemblyColors="#a884a1" >
		<Microinstruction microRef="model.microinstruction.SetCondBit1b786a9a" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="f2" instructionFormat="OP_R UNUSED" assemblyFormat="OP_R" instructionColors="#c4b284 #8ba7b3" assemblyColors="#c4b284" >
		<Microinstruction microRef="model.microinstruction.CpusimSet647c76ef" />
		<Microinstruction microRef="model.microinstruction.End69691179" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM6508e320" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
